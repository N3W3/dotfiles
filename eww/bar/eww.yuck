;;-----------------Variables-----------------

;; Date time H:M
(defpoll time :interval "5s" "date +%H:%M")

;; Volume
(defpoll volume :interval "1s" "./scripts/sound.sh") ;; Getting the current volume
(defvar isVolumeSelect false) ;; is the cursor on the volume icon ?

;; Workspaces actives on diff√©rents monitors
(defvar workspacesRight "" )
(defvar workspacesLeft "" )

;;-----------------Widgets Monitors-----------------

(defwidget workspacesMonitor0 []
    (literal :content workspacesRight))

(defwidget workspacesMonitor1 []
    (literal :content workspacesLeft))

;;-----------------Widget Time-----------------

(defwidget dateTime []
    (box :class "time"
    (label :text time)))

;;-----------------Widget Sound----------------
(defwidget volume []
                (eventbox :onhover "./scripts/onHoverVolume.sh 1"
                          :onhoverlost "./scripts/onHoverVolume.sh 0"
                (box      :orientation "h"
                          :space-evenly "false"
                (revealer :transition "slideleft"
                          :reveal isVolumeSelect
                          :duration "500ms"
                (scale    :class "bar-volume"
                          :value volume
                          :orientation "h"
                          :flipped true
                          :max 101
                          :min 0
                          :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"))
                (button    :onclick "./scripts/open_pavucontrol.sh"
                           :class "bar-volume-icon"
                (image :path "images/volume_high.svg"
                       :image-width 24
                       :image-height 24)))))

;;-----------------Widget Arch Icon-------------
(defwidget arch []
    (eventbox :hover ""
    (box      :orientation "h"
              :space-evenly "false"
    (image    :path "images/arch.svg"
              :image-width 24
              :image-height 24))))

;;----------------Widget Reduced app------------

;;-----------------Widgets -----------------

;;-----------------Widgets LetfBars-----------------

(defwidget leftBarMonitor0 []
  (box
    :class "left"
    (workspacesMonitor0)))

(defwidget leftBarMonitor1 []
  (box
    :class "left"
    (workspacesMonitor1)))

;;-----------------Widget bar-----------------

(defwidget bar0 []
    (box :class "bar-widget" :orientation "h" :space-evenly true

        (box :orientation "h" :space-evenly false :halign "start"
            (leftBarMonitor0)
        )

        (box :orientation "h" :space-evenly false :halign "center"
            (dateTime)
        )

        (box :orientation "h" :space-evenly false :halign "end"
             (volume)
             (arch)
        )

    )

)

(defwidget bar1 []
    (box :class "bar-widget" :orientation "h" :space-evenly true

        (box :orientation "h" :space-evenly false :halign "start"
            (leftBarMonitor1)
        )

        (box :orientation "h" :space-evenly false :halign "center"
            (dateTime)
        )

        (box :orientation "h" :space-evenly false :halign "end"
             (volume)
             (arch)
        )

    )

)
;;-----------------Windows Monitors-----------------
(defwindow barMonitor0
           :monitor 0
           :geometry (geometry :width "100%"
                               :height "24px"
                               :anchor "top center")
           :exclusive true
           (bar0)
)
(defwindow barMonitor1
           :monitor 1
           :geometry (geometry :width "100%"
                               :height "24px"
                               :anchor "top center")
           :exclusive true
           (bar1)
)
